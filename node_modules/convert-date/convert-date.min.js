class ConvertDate{constructor(){this.date=new Date,this.monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'],this.ends=['st','nd','rd'],this.day=this.date.getUTCDate(),this.month=this.date.getUTCMonth(),this.year=this.date.getUTCFullYear()}convertDays(a){this.day=a.getUTCDate();const b=this.day.toString();return errorHandler.dayOfMonthLength(b)&&(this.ends.map((d,e)=>{1===b.length?4<=this.day&&9>=this.day?this.day=`0${this.day}th`:this.day===e+1&&(this.day=`0${this.day}${d}`):2===b.length&&b[1]===(e+1).toString()&&(this.day=`${this.day}${d}`)}),(b[1]===0 .toString()||4<=b[1]&&9>=b[1])&&(this.day=`${this.day}th`)),this.day}convertMonths(a){return this.month=a.getUTCMonth(),this.month=this.monthNames[this.month],this.month}convertYears(a){return this.year=a.getUTCFullYear(),this.year}convertDate(a=new Date){const b=this.convertDays(a),c=this.convertMonths(a),d=this.convertYears(a);return`${b} of ${c} ${d}`}}class ErrorHandler{dayOfMonthLength(a){if(2<a.length&&'NaN'!==a)throw RangeError(`The day of the month, can't contain three numbers. Only two numbers are allowed.`);else if('NaN'===a)throw SyntaxError(`The day of the month can't be zero or multiple zero number, it has to be 01 or 1`);return!0}}const dateConverter=new ConvertDate,errorHandler=new ErrorHandler;export default dateConverter;